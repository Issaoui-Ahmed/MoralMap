// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = never
type AppRouteHandlerRoutes = "/api/log-choice" | "/api/log-survey" | "/api/route-endpoints"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = "/" | "/%PUBLIC_URL%" | "/%PUBLIC_URL%/favicon.ico" | "/%PUBLIC_URL%/logo192.png" | "/%PUBLIC_URL%/logo512.png" | "/%PUBLIC_URL%/manifest.json" | "/%PUBLIC_URL%/robots.txt" | "/app/%PUBLIC_URL%" | "/app/%PUBLIC_URL%/favicon.ico" | "/app/%PUBLIC_URL%/logo192.png" | "/app/%PUBLIC_URL%/logo512.png" | "/app/%PUBLIC_URL%/manifest.json" | "/app/%PUBLIC_URL%/robots.txt" | "/favicon.ico" | "/logo192.png" | "/logo512.png" | "/manifest.json" | "/robots.txt"
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/%PUBLIC_URL%": {}
  "/%PUBLIC_URL%/favicon.ico": {}
  "/%PUBLIC_URL%/logo192.png": {}
  "/%PUBLIC_URL%/logo512.png": {}
  "/%PUBLIC_URL%/manifest.json": {}
  "/%PUBLIC_URL%/robots.txt": {}
  "/api/log-choice": {}
  "/api/log-survey": {}
  "/api/route-endpoints": {}
  "/app/%PUBLIC_URL%": {}
  "/app/%PUBLIC_URL%/favicon.ico": {}
  "/app/%PUBLIC_URL%/logo192.png": {}
  "/app/%PUBLIC_URL%/logo512.png": {}
  "/app/%PUBLIC_URL%/manifest.json": {}
  "/app/%PUBLIC_URL%/robots.txt": {}
  "/favicon.ico": {}
  "/logo192.png": {}
  "/logo512.png": {}
  "/manifest.json": {}
  "/robots.txt": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
